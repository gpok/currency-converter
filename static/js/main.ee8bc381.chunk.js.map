{"version":3,"sources":["Common/Components/CentralizedWrapper/CentralizedWrapper.jsx","Common/Redux/Alert/AlertActions.jsx","Layout/Alert/AlertEntry.jsx","Layout/Alert/Alert.jsx","Common/Components/SidePanelContainer/SidePanelContainer.jsx","Layout/Converter/CurrencyValueInput.jsx","Common/Components/CustomSelect/CustomSelect.jsx","Layout/Converter/CurrencyInput.jsx","Common/Services/OpenExchangeRatesApi/OpenExchangeRatesApi.jsx","Common/Redux/ConversionHistory/ConversionHistoryActions.jsx","Common/IndexedDB/ConversionHistoryIndexedDB.js","Layout/Converter/ConverterForm.jsx","Layout/Converter/Converter.jsx","Layout/ConversionHistory/ConversionHistoryTable.jsx","Layout/ConversionHistory/ConversionHistory.jsx","Layout/App.js","serviceWorker.js","Common/Redux/Alert/AlertReducer.jsx","Common/Redux/ConversionHistory/ConversionHistoryReducer.jsx","Common/Redux/CombinedReducers.jsx","index.js"],"names":["CentralizedWrapper","wrapperType","children","height","wraperStyle","maxHeight","className","style","defaultProps","ACTIONS","ALERT_TYPE","ERROR","WARNING","INFO","SUCCESS","EMPTY","PropTypes","shape","type","oneOf","Object","keys","header","string","message","key","AlertActions","AddError","AddWarning","AddInfo","AddSuccess","Remove","AlertEntry","alert","timeout","remove","useState","timeoutVar","setTimeoutVar","useEffect","setTimeout","onClick","clearTimeout","connect","dispatch","Alert","map","entry","state","SidePanelContainer","sidePanel","sideHeader","opened","setOpened","SidePanelStyle","width","CurrencyValueInput","name","placeholder","validate","label","editable","useFinalForm","value","component","validatorValue","isNaN","parseFloat","input","meta","id","readOnly","htmlFor","error","CustomSelect","options","selectElement","useRef","selectElementList","isListShown","setListShawn","scrollToValue","current","elementToScrollTo","querySelector","scrollTop","offsetTop","onChange","dataset","handleClickOutside","e","contains","target","onBlur","document","addEventListener","removeEventListener","ref","role","tabIndex","onMouseDown","console","log","onFocus","onKeyDown","keyToFind","keyCode","index","findIndex","obj","length","match","toUpperCase","data-value","aria-selected","CurrencyInput","initialValue","currency","url","OpenExchangeRatesApi","GetCurrencies","successEvent","errorEvent","axios","request","method","responseType","then","response","data","catch","ConvertCurrency","from","to","params","app_id","crossdomain","Math","floor","rates","ConversionHistoryActions","number","date","entryValue","resultValue","Clear","Set","TABLE_NAME","Connect","openDB","upgrade","database","oldVersion","store","createObjectStore","keyPath","autoIncrement","createIndex","unique","GetEntries","successFunc","errorFunc","a","getAll","Error","add","clear","ConverterForm","addError","SetConversionHistory","currenciesList","setCurrenciesList","setResultValue","resultData","errorData","onSubmit","CurrencySource","CurrencyTarget","CurrencyValue","replace","AddEntry","Date","toLocaleDateString","historyData","errors","CurrencySame","mutators","switchCurrencies","args","tools","values","formState","changeValue","render","handleSubmit","submitting","pristine","invalid","form","disabled","text","Converter","ConversionHistoryTable","colSpan","ConversionHistory","conversionHistory","clearConversionHistory","setConversionHistory","disableButtons","reverse","App","Boolean","window","location","hostname","generateKey","getUTCMilliseconds","random","AlertReducer","action","stateModed","x","splice","ConversionHistoryReducer","CombinedReducers","combineReducers","createStore","ReactDOM","StrictMode","exact","path","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee8bc381.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./CentralizedWrapper.scss\";\n\nconst WrapperTypes = { AbsoluteFill: \"AbsoluteFill\" };\n\nconst CentralizedWrapper = ({ wrapperType, children, height }) => {\n\n  const wraperStyle = {};\n  if (height !== null) {\n    wraperStyle.maxHeight = `${height}px`;\n    wraperStyle.height = \"100%\";\n  }\n\n  return (\n    <div className={`CentralizedWrapper CentralizedWrapper-${wrapperType}`}>\n      <div className=\"CentralizedWrapper_Child\" style={wraperStyle}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nCentralizedWrapper.propTypes = {\n  wrapperType: PropTypes.oneOf(Object.keys(WrapperTypes)),\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  height: PropTypes.number,\n};\n\nCentralizedWrapper.defaultProps = {\n  wrapperType: WrapperTypes.AbsoluteFill,\n  height: null,\n};\n\nexport default CentralizedWrapper;\nexport { WrapperTypes };\n","import PropTypes from \"prop-types\";\n\nexport const ACTIONS = {\n  ACTION_ADD_ERROR: \"ACTION_ADD_ERROR\",\n  ACTION_ADD_WARNING: \"ACTION_ADD_WARNING\",\n  ACTION_ADD_INFO: \"ACTION_ADD_INFO\",\n  ACTION_ADD_SUCCESS: \"ACTION_ADD_SUCCESS\",\n  ACTION_REMOVE_BY_KEY: \"ACTION_REMOVE_BY_KEY\",\n};\n\nexport const ALERT_TYPE = {\n  ERROR: \"ERROR\",\n  WARNING: \"WARNING\",\n  INFO: \"INFO\",\n  SUCCESS: \"SUCCESS\",\n};\n\nexport const PROPTYPE_SHAPE = PropTypes.shape({\n  type: PropTypes.oneOf(Object.keys(ALERT_TYPE)),\n  header: PropTypes.string,\n  message: PropTypes.string,\n  key: PropTypes.string,\n});\nexport const EMPTY = {\n  type: ALERT_TYPE.WARNING,\n  header: \"NULL\",\n  message: \"NULL\",\n  key: \"0\",\n};\n\nconst AddError = (header, message) => {\n  return { type: ACTIONS.ACTION_ADD_ERROR, header, message };\n};\nconst AddWarning = (header, message) => {\n  return { type: ACTIONS.ACTION_ADD_WARNING, header, message };\n};\nconst AddInfo = (header, message) => {\n  return { type: ACTIONS.ACTION_ADD_INFO, header, message };\n};\nconst AddSuccess = (header, message) => {\n  return { type: ACTIONS.ACTION_ADD_SUCCESS, header, message };\n};\nconst Remove = (key) => {\n  return { type: ACTIONS.ACTION_REMOVE_BY_KEY, key };\n};\n\nconst AlertActions = { AddError, AddWarning, AddInfo, AddSuccess, Remove };\nexport default AlertActions;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport AlertActions, {\n  PROPTYPE_SHAPE,\n  EMPTY,\n} from \"../../Common/Redux/Alert/AlertActions\";\n\nconst AlertEntry = ({ alert, timeout, remove }) => {\n  const [timeoutVar, setTimeoutVar] = useState(null);\n  useEffect(() => {\n    if (timeout !== 0)\n      setTimeoutVar(\n        setTimeout(() => {\n          remove(alert.key);\n        }, timeout * 1000)\n      );\n  }, [alert.key, remove, timeout]);\n  return (\n    <div className={`Alert_Entry Alert_Entry-${alert.type}`}>\n      <p className=\"Alert_Entry_Header\">{alert.header}</p>\n      {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n      {alert.message !== \"undefined\" && (\n        <p className=\"Alert_Entry_Message\">{alert.message}</p>\n      )}\n      {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n      <button\n        type=\"button\"\n        onClick={() => {\n          if (timeoutVar !== null) clearTimeout(timeoutVar);\n          remove(alert.key);\n        }}\n      >\n        &#x274C;\n      </button>\n    </div>\n  );\n};\n\nAlertEntry.propTypes = {\n  alert: PROPTYPE_SHAPE,\n  timeout: PropTypes.number,\n  remove: PropTypes.func.isRequired,\n};\n\nAlertEntry.defaultProps = {\n  alert: EMPTY,\n  timeout: 10,\n};\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    remove: (key) => dispatch(AlertActions.Remove(key)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertEntry);\n","import React from \"react\";\nimport \"./Alert.scss\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  PROPTYPE_SHAPE,\n  ALERT_TYPE,\n} from \"../../Common/Redux/Alert/AlertActions\";\nimport AlertEntry from \"./AlertEntry\";\n\nconst Alert = ({ alert }) => {\n  return (\n    <div className=\"Alert_Wrapper\">\n      {alert.map((entry) => {\n        switch (entry.type) {\n          case ALERT_TYPE.ERROR:\n            return <AlertEntry alert={entry} key={entry.key} timeout={30} />;\n          case ALERT_TYPE.SUCCESS:\n            return <AlertEntry alert={entry} key={entry.key} timeout={5} />;\n          default:\n            return <AlertEntry alert={entry} key={entry.key} timeout={10} />;\n        }\n      })}\n    </div>\n  );\n};\n\nAlert.propTypes = {\n  alert: PropTypes.arrayOf(PROPTYPE_SHAPE),\n};\n\nAlert.defaultProps = {\n  alert: [],\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    alert: state.alert,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Alert);\n","import React, { useState } from \"react\";\nimport \"./SidePanelContainer.scss\";\nimport PropTypes from \"prop-types\";\n\nconst SidePanelContainer = ({ children, sidePanel, sideHeader }) => {\n  const [opened, setOpened] = useState(false);\n\n  const SidePanelStyle = {};\n  if (opened) SidePanelStyle.width = \"340px\";\n\n  return (\n    <div className=\"SidePanelContainer\">\n      <div className=\"SidePanelContainer_Content\">\n        <div className=\"SidePanelContainer_Content_Main\">{children}</div>\n        <div className=\"SidePanelContainer_Content_Side\" style={SidePanelStyle}>\n          <div style={{ width: \"300px\" }}>\n            {typeof sidePanel === \"function\"\n              ? sidePanel({ opened })\n              : sidePanel}\n          </div>\n        </div>\n      </div>\n      <button\n        type=\"button\"\n        className={`SidePanelContainer_Button${\n          opened ? \" SidePanelContainer_Button-Opened\" : \"\"\n        }`}\n        onClick={() => {\n          setOpened(!opened);\n        }}\n      >\n        {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n        <p>&#x274C;</p>\n        {sideHeader}\n      </button>\n    </div>\n  );\n};\n\nSidePanelContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  sidePanel: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.func,\n  ]),\n  sideHeader: PropTypes.string,\n};\n\nSidePanelContainer.defaultProps = {\n  sidePanel: \"\",\n  sideHeader: \"SIDE\",\n};\n\nexport default SidePanelContainer;\n","import React from \"react\";\nimport { Field } from \"react-final-form\";\nimport PropTypes from \"prop-types\";\n\nconst CurrencyValueInput = ({\n  name,\n  placeholder,\n  validate,\n  label,\n  editable,\n  useFinalForm,\n  value,\n}) => {\n  if (useFinalForm)\n    return (\n      <Field\n        name={name}\n        component=\"input\"\n        validate={(validatorValue) => {\n          if (!validate) return null;\n          if (!validatorValue) return \"Wartość jest wymagana\";\n          // eslint-disable-next-line no-restricted-globals\n          if (isNaN(parseFloat(validatorValue))) return \"Wartość nie jest liczbą\";\n          return null;\n        }}\n      >\n        {({ input, meta }) => (\n          <div className=\"ConverterForm_FullLine\">\n            <input\n              {...input}\n              type=\"text\"\n              placeholder={placeholder}\n              id={`CurrencyValue-${name}`}\n              readOnly={!editable}\n            />\n            {label && <label htmlFor={`CurrencyValue-${name}`}>{label}</label>}\n            <span className=\"ConverterForm_Error\">\n              {meta.error && meta.error}\n            </span>\n          </div>\n        )}\n      </Field>\n    );\n  return (\n    <div className=\"ConverterForm_FullLine\">\n      <input\n        type=\"text\"\n        placeholder={placeholder}\n        id={`CurrencyValue-${name}`}\n        readOnly={!editable}\n        value={value}\n      />\n      {label && <label htmlFor={`CurrencyValue-${name}`}>{label}</label>}\n    </div>\n  );\n};\n\nCurrencyValueInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  editable: PropTypes.bool,\n  placeholder: PropTypes.string,\n  label: PropTypes.string,\n  validate: PropTypes.bool,\n  useFinalForm: PropTypes.bool,\n  value: PropTypes.string,\n};\n\nCurrencyValueInput.defaultProps = {\n  placeholder: \"\",\n  label: \"\",\n  validate: true,\n  editable: true,\n  useFinalForm: true,\n  value: \"\",\n};\n\nexport default CurrencyValueInput;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./CustomSelect.scss\";\n\nconst CustomSelect = ({ input, options }) => {\n  const selectElement = useRef(null);\n  const selectElementList = useRef(null);\n  const [isListShown, setListShawn] = useState(false);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function scrollToValue(value) {\n    if (!selectElementList.current) return;\n    const elementToScrollTo = selectElementList.current.querySelector(\n      `[data-value^=\"${value}\"]`\n    );\n    if (elementToScrollTo) {\n      selectElementList.current.scrollTop = elementToScrollTo.offsetTop;\n      input.onChange(elementToScrollTo.dataset.value);\n    }\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function handleClickOutside(e) {\n    if (selectElement && !selectElement.current.contains(e.target)) {\n      setListShawn(false);\n      input.onBlur();\n    }\n  }\n  function handleClickSelect(e) {\n    if (!isListShown) setListShawn(!isListShown);\n    if (!selectElementList.current) return;\n\n    let keyToFind = null;\n    if (e.keyCode === 38) {\n      const index = options.findIndex((obj) => obj.value === input.value);\n      if (index > 0) {\n        keyToFind = options[index - 1].value;\n      }\n    } else if (e.keyCode === 40) {\n      const index = options.findIndex((obj) => obj.value === input.value);\n      if (index < options.length - 1) {\n        keyToFind = options[index + 1].value;\n      }\n    } else if (e.key && e.key.length === 1 && e.key.match(/[a-z]/i)) {\n      keyToFind = e.key.toUpperCase();\n    }\n    if (keyToFind !== null) scrollToValue(keyToFind);\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [handleClickOutside]);\n  useEffect(() => {\n    if (isListShown) {\n      scrollToValue(input.value);\n    }\n  }, [isListShown, scrollToValue, input.value]);\n\n  return (\n    <div\n      className=\"CustomSelect\"\n      ref={selectElement}\n      role=\"button\"\n      tabIndex={0}\n      onMouseDown={() => {\n        console.log(\"down\");\n        console.log(options);\n        setListShawn(!isListShown);\n      }}\n      onFocus={(e) => {\n        setListShawn(true);\n        input.onFocus(e);\n      }}\n      onBlur={(e) => {\n        setListShawn(false);\n        input.onBlur(e);\n      }}\n      onKeyDown={handleClickSelect}\n    >\n      <div\n        className={`CustomSelect_Header${\n          isListShown ? \" CustomSelect_Header-Opened\" : \"\"\n        }`}\n      >\n        {input.value}\n      </div>\n      {isListShown && (\n        <ul\n          className={`CustomSelect_List${\n            isListShown ? \" CustomSelect_Header-Opened\" : \"\"\n          }`}\n          ref={selectElementList}\n        >\n          {options.map(({ value, label }) => (\n            <li\n              className={`CustomSelect_List_Element${\n                input.value === value\n                  ? \" CustomSelect_List_Element-Selected\"\n                  : \"\"\n              }`}\n              data-value={value}\n              key={value}\n              onMouseDown={() => {\n                input.onChange(value);\n                setListShawn(false);\n              }}\n              aria-selected={input.value === value}\n              role=\"option\"\n            >\n              {label}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nCustomSelect.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({ value: PropTypes.string, label: PropTypes.string })\n  ).isRequired,\n  input: PropTypes.shape({\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n  }).isRequired,\n};\n\nCustomSelect.defaultProps = {};\n\nexport default CustomSelect;\n","import React from \"react\";\nimport { Field } from \"react-final-form\";\nimport PropTypes from \"prop-types\";\nimport CustomSelect from \"../../Common/Components/CustomSelect/CustomSelect\";\n\nconst CurrencyInput = ({ name, placeholder, options }) => {\n  return (\n    <div className=\"ConverterForm_Select\">\n      <Field\n        name={name}\n        component={CustomSelect}\n        // component=\"select\"\n        placeholder={placeholder}\n        initialValue={options.length > 0 ? options[0] : \"\"}\n        options={options.map((currency) => ({\n          value: currency,\n          label: currency,\n        }))}\n      >\n      </Field>\n    </div>\n  );\n\n  // return (\n  //     <div className=\"ConverterForm_Select\">\n  //         <Field\n  //             name={name}\n  //             component={CustomSelect}\n  //             // component=\"select\"\n  //             placeholder={placeholder}\n  //             initialValue={options.length > 0 ? options[0] : \"\"}\n  //             options={options.map((currency) => ({\n  //                 value: currency,\n  //                 key: currency,\n  //             }))}\n  //         />\n  //         {/* {options.map((value) => { */}\n  //         {/*  return ( */}\n  //         {/*    <option value={value} key={value}> */}\n  //         {/*      {value} */}\n  //         {/*    </option> */}\n  //         {/*  ); */}\n  //         {/* })} */}\n  //         {/*</Field>*/}\n  //     </div>\n  // );\n};\n\nCurrencyInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string),\n  placeholder: PropTypes.string,\n};\n\nCurrencyInput.defaultProps = {\n  placeholder: \"\",\n  options: [],\n};\n\nexport default CurrencyInput;\n","import axios from \"axios\";\n\nconst url = \"https://openexchangerates.org/api/\";\nconst key = \"bd35b2e981784018a6c65e183ea83294\";\n\nconst GetCurrencies = (successEvent, errorEvent) => {\n  axios\n    .request({\n      url: `${url}currencies.json`,\n      method: \"get\",\n      responseType: \"json\",\n    })\n    .then(function (response) {\n      // const dt = Object.keys(response.data).reduce(\n      //   (prev, cur) => ({ ...prev, [cur]: cur }),\n      //   {}\n      // );\n      successEvent(Object.keys(response.data));\n    })\n    .catch(function (error) {\n      errorEvent(error);\n    });\n};\nconst ConvertCurrency = (from, to, value, successEvent, errorEvent) => {\n  axios\n    .request({\n      url: `${url}latest.json`,\n      method: \"get\",\n      responseType: \"json\",\n      params: {\n        app_id: key,\n      },\n      crossdomain: true,\n    })\n    .then(function (response) {\n      successEvent(\n        Math.floor(\n          (value / response.data.rates[from]) * response.data.rates[to] * 100\n        ) / 100\n      );\n    })\n    .catch(function (error) {\n      errorEvent(error);\n    });\n};\n\nconst OpenExchangeRatesApi = {\n  GetCurrencies,\n  ConvertCurrency,\n};\nexport default OpenExchangeRatesApi;\n","import PropTypes from \"prop-types\";\n\nexport const ACTIONS = {\n  ACTION_SET: \"ACTION_SET\",\n  ACTION_CLEAR: \"ACTION_CLEAR\",\n};\n\nexport const PROPTYPE_SHAPE = PropTypes.shape({\n  id: PropTypes.number,\n  date: PropTypes.string,\n  entryValue: PropTypes.string,\n  resultValue: PropTypes.string,\n});\nexport const EMPTY = {\n  date: \"NULL\",\n  entryValue: \"NULL\",\n  resultValue: \"NULL\",\n};\n\nconst Set = (data) => {\n  return { type: ACTIONS.ACTION_SET, data };\n};\nconst Clear = () => {\n  return { type: ACTIONS.ACTION_CLEAR };\n};\n\nconst ConversionHistoryActions = { Clear, Set };\nexport default ConversionHistoryActions;\n","import { openDB } from \"idb\";\n\nconst DATABASE_NAME = \"Currency\";\nconst TABLE_NAME = \"ConversionHistory\";\n\nconst Connect = () => {\n  return openDB(DATABASE_NAME, 1, {\n    upgrade(database, oldVersion) {\n      if (oldVersion === 0) {\n        const store = database.createObjectStore(TABLE_NAME, {\n          keyPath: \"id\",\n          autoIncrement: true,\n        });\n        store.createIndex(\"date\", \"date\", { unique: false });\n        store.createIndex(\"entryValue\", \"entryValue\", { unique: false });\n        store.createIndex(\"resultValue\", \"resultValue\", { unique: false });\n      }\n    },\n  });\n};\n\n/**\n *\n * @param {Function} successFunc\n * @param {Function} errorFunc\n * @returns {Promise<void>}\n * @constructor\n */\nexport async function GetEntries(successFunc, errorFunc) {\n  Connect()\n    .then((database) => {\n      database\n        .getAll(TABLE_NAME)\n        .then((value) => {\n          successFunc(value);\n        })\n        .catch((Error) => {\n          errorFunc(Error);\n        });\n    })\n    .catch((Error) => {\n      errorFunc(Error);\n    });\n}\n\n/**\n * @param {string} date\n * @param {string} entryValue\n * @param {string} resultValue\n * @param {Function} successFunc\n * @param {Function} errorFunc\n * @returns {Promise<void>}\n * @constructor\n */\nexport async function AddEntry(\n  { date, entryValue, resultValue },\n  successFunc,\n  errorFunc\n) {\n  Connect()\n    .then((database) => {\n      database\n        .add(TABLE_NAME, { date, entryValue, resultValue })\n        .then(() => {\n          GetEntries(successFunc, errorFunc);\n        })\n        .catch((Error) => {\n          errorFunc(Error);\n        });\n    })\n    .catch((Error) => {\n      errorFunc(Error);\n    });\n}\n\n/**\n * @param {Function} successFunc\n * @param {Function} errorFunc\n * @returns {Promise<void>}\n * @constructor\n */\nexport async function Clear(successFunc, errorFunc) {\n  Connect()\n    .then((database) => {\n      database\n        .clear(TABLE_NAME)\n        .then(() => {\n          GetEntries(successFunc, errorFunc);\n        })\n        .catch((Error) => {\n          errorFunc(Error);\n        });\n    })\n    .catch((Error) => {\n      errorFunc(Error);\n    });\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./ConverterForm.scss\";\nimport { Form } from \"react-final-form\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Offline } from \"react-detect-offline\";\nimport CurrencyValueInput from \"./CurrencyValueInput\";\nimport CurrencyInput from \"./CurrencyInput\";\nimport AlertActions from \"../../Common/Redux/Alert/AlertActions\";\nimport OpenExchangeRatesApi from \"../../Common/Services/OpenExchangeRatesApi/OpenExchangeRatesApi\";\nimport ConversionHistoryActions from \"../../Common/Redux/ConversionHistory/ConversionHistoryActions\";\nimport { AddEntry } from \"../../Common/IndexedDB/ConversionHistoryIndexedDB\";\n\nconst ConverterForm = ({ addError, AddInfo, SetConversionHistory }) => {\n  const [currenciesList, setCurrenciesList] = useState([\"USD\"]);\n  const [resultValue, setResultValue] = useState(\"\");\n  useEffect(() => {\n    OpenExchangeRatesApi.GetCurrencies(\n      (resultData) => {\n        AddInfo(\"Zaktualizowano  liste walut\");\n        setCurrenciesList(resultData);\n      },\n      (errorData) => {\n        addError(\"Nie udało się pobrać listy walut\", errorData.message);\n      }\n    );\n  }, [AddInfo, addError]);\n\n  const onSubmit = ({ CurrencySource, CurrencyTarget, CurrencyValue }) => {\n    OpenExchangeRatesApi.ConvertCurrency(\n      CurrencySource,\n      CurrencyTarget,\n      parseFloat(CurrencyValue.replace(\",\", \".\")),\n      (resultData) => {\n        AddEntry(\n          {\n            date: new Date().toLocaleDateString(),\n            entryValue: `${CurrencyValue} ${CurrencySource}`,\n            resultValue: `${resultData} ${CurrencyTarget}`,\n          },\n          (historyData) => {\n            SetConversionHistory(historyData);\n          },\n          (error) => {\n            console.log({ error });\n          }\n        );\n        setResultValue(resultData);\n      },\n      (errorData) => {\n        addError(\"Nie udało się przekonwertować waluty\", errorData.message);\n      }\n    );\n  };\n\n  return (\n    <Form\n      onSubmit={(data) => {\n        onSubmit(data);\n      }}\n      validate={({ CurrencySource, CurrencyTarget }) => {\n        const errors = {};\n        if (CurrencySource === CurrencyTarget)\n          errors.CurrencySame =\n            \"Waluta docelowa nie może być identyczna z konwertowaną\";\n        return errors;\n      }}\n      mutators={{\n        switchCurrencies: (args, state, tools) => {\n          const { values } = state.formState;\n          tools.changeValue(\n            state,\n            \"CurrencySource\",\n            () => values.CurrencyTarget\n          );\n          tools.changeValue(\n            state,\n            \"CurrencyTarget\",\n            () => values.CurrencySource\n          );\n          // tools.changeValue(state, \"apples\", () => 1);\n        },\n      }}\n      render={({\n        handleSubmit,\n        submitting,\n        pristine,\n        invalid,\n        errors,\n        values,\n        form,\n      }) => (\n        <form onSubmit={handleSubmit} className=\"ConverterForm\">\n          <CurrencyValueInput\n            name=\"CurrencyValue\"\n            placeholder=\"Wpisz kwotę\"\n            label={values.CurrencySource}\n          />\n          <CurrencyValueInput\n            name=\"CurrencyResult\"\n            placeholder=\"Wynik\"\n            validate={false}\n            label={values.CurrencyTarget}\n            editable={false}\n            useFinalForm={false}\n            value={`${resultValue}`}\n          />\n          <div className=\"ConverterForm_DoubleSelect\">\n            <CurrencyInput name=\"CurrencySource\" options={currenciesList} />\n            <button\n              type=\"button\"\n              onClick={() => {\n                form.mutators.switchCurrencies();\n              }}\n            >\n              &#8644;\n            </button>\n            <CurrencyInput name=\"CurrencyTarget\" options={currenciesList} />\n            <span className=\"ConverterForm_Error\">\n              {errors.CurrencySame && errors.CurrencySame}\n            </span>\n          </div>\n          <button type=\"submit\" disabled={pristine || invalid || submitting}>\n            KONWERTUJ\n          </button>\n          <Offline>\n            <span className=\"ConverterForm_Error\">\n              Musisz mieć dostęp do internetu,\n              <br /> by móc konwertować waluty z obecnym kursem.\n            </span>\n          </Offline>\n        </form>\n      )}\n    />\n  );\n};\n\nConverterForm.propTypes = {\n  addError: PropTypes.func.isRequired,\n  AddInfo: PropTypes.func.isRequired,\n  SetConversionHistory: PropTypes.func.isRequired,\n};\n\nConverterForm.defaultProps = {};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addError: (header, text) => dispatch(AlertActions.AddError(header, text)),\n    AddInfo: (header, text) => dispatch(AlertActions.AddInfo(header, text)),\n    SetConversionHistory: (data) =>\n      dispatch(ConversionHistoryActions.Set(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ConverterForm);\n","import React from \"react\";\nimport \"./Converter.scss\";\nimport ConverterForm from \"./ConverterForm\";\n\nconst Converter = () => {\n  return (\n    <div className=\"Converter\">\n      <p className=\"Converter_Header\">Konwerter walut</p>\n      <ConverterForm />\n    </div>\n  );\n};\n\nConverter.propTypes = {};\n\nConverter.defaultProps = {};\n\nexport default Converter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ConversionHistoryTable.scss\";\nimport { PROPTYPE_SHAPE } from \"../../Common/Redux/ConversionHistory/ConversionHistoryActions\";\n\nconst ConversionHistoryTable = ({ data, style }) => {\n  return (\n    <table className=\"ConversionHistoryTable\" style={style}>\n      <thead>\n        <tr>\n          <th>Data</th>\n          <th>Przed konwersją</th>\n          <th style={{ width: \"15px\" }} />\n          <th>Po konwersji</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.length < 1 ? (\n          <tr>\n            <td colSpan={3}>Brak zapisów historycznych</td>\n          </tr>\n        ) : (\n          data.map((value) => {\n            return (\n              <tr key={`${value.id}`}>\n                <td>{value.date}</td>\n                <td>{value.entryValue}</td>\n                <td style={{ width: \"15px\" }}>&#11157;</td>\n                <td>{value.resultValue}</td>\n              </tr>\n            );\n          })\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nConversionHistoryTable.propTypes = {\n  data: PropTypes.arrayOf(PROPTYPE_SHAPE),\n  // eslint-disable-next-line react/forbid-prop-types\n  style: PropTypes.object,\n};\n\nConversionHistoryTable.defaultProps = {\n  data: [],\n  style: {},\n};\n\nexport default ConversionHistoryTable;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ConversionHistory.scss\";\nimport { connect } from \"react-redux\";\nimport ConversionHistoryTable from \"./ConversionHistoryTable\";\nimport ConversionHistoryActions, {\n  PROPTYPE_SHAPE,\n} from \"../../Common/Redux/ConversionHistory/ConversionHistoryActions\";\nimport {\n  Clear,\n  GetEntries,\n} from \"../../Common/IndexedDB/ConversionHistoryIndexedDB\";\n\nconst ConversionHistory = ({\n  conversionHistory,\n  clearConversionHistory,\n  setConversionHistory,\n  disableButtons,\n}) => {\n  useEffect(() => {\n    GetEntries(\n      (data) => {\n        setConversionHistory(data);\n      },\n      () => {}\n    );\n  }, [setConversionHistory]);\n  return (\n    <div className=\"ConversionHistory\">\n      <ConversionHistoryTable\n        data={[...conversionHistory].reverse()}\n        style={{ height: \"300px\" }}\n      />\n      <button\n        className=\"ConversionHistory_ClearButton\"\n        type=\"button\"\n        onClick={() => {\n          clearConversionHistory();\n          Clear(\n            () => {},\n            () => {}\n          );\n        }}\n        disabled={disableButtons}\n      >\n        Wyczyść historię\n      </button>\n    </div>\n  );\n};\n\nConversionHistory.propTypes = {\n  conversionHistory: PropTypes.arrayOf(PROPTYPE_SHAPE).isRequired,\n  clearConversionHistory: PropTypes.func.isRequired,\n  setConversionHistory: PropTypes.func.isRequired,\n  disableButtons: PropTypes.bool.isRequired,\n};\n\nConversionHistory.defaultProps = {\n  disableButtons: false,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    conversionHistory: state.conversionHistory,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    clearConversionHistory: () => dispatch(ConversionHistoryActions.Clear()),\n    setConversionHistory: (data) =>\n      dispatch(ConversionHistoryActions.Set(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConversionHistory);\n","import React from \"react\";\nimport \"./App.css\";\nimport CentralizedWrapper from \"../Common/Components/CentralizedWrapper/CentralizedWrapper\";\nimport Alert from \"./Alert/Alert\";\nimport SidePanelContainer from \"../Common/Components/SidePanelContainer/SidePanelContainer\";\nimport Converter from \"./Converter/Converter\";\nimport ConversionHistory from \"./ConversionHistory/ConversionHistory\";\n\nconst App = () => {\n  return (\n    <>\n      <CentralizedWrapper>\n        <SidePanelContainer\n          sideHeader=\"Historia\"\n          sidePanel={({ opened }) => (\n            <ConversionHistory disableButtons={!opened} />\n          )}\n        >\n          <Converter />\n        </SidePanelContainer>\n      </CentralizedWrapper>\n      <Alert />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // eslint-disable-next-line no-console\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.error(error.message);\n      });\n  }\n}\n","import { ACTIONS, ALERT_TYPE } from \"./AlertActions\";\n\nconst generateKey = () => {\n  return `${new Date().getUTCMilliseconds()}${Math.random()}`;\n};\n\nfunction AlertReducer(state = [], action) {\n  switch (action.type) {\n    case ACTIONS.ACTION_ADD_ERROR:\n      return [\n        ...state,\n        {\n          type: ALERT_TYPE.ERROR,\n          header: `${action.header}`,\n          message: `${action.message}`,\n          key: generateKey(),\n        },\n      ];\n    case ACTIONS.ACTION_ADD_WARNING:\n      return [\n        ...state,\n        {\n          type: ALERT_TYPE.WARNING,\n          header: `${action.header}`,\n          message: `${action.message}`,\n          key: generateKey(),\n        },\n      ];\n    case ACTIONS.ACTION_ADD_INFO:\n      return [\n        ...state,\n        {\n          type: ALERT_TYPE.INFO,\n          header: `${action.header}`,\n          message: `${action.message}`,\n          key: generateKey(),\n        },\n      ];\n    case ACTIONS.ACTION_ADD_SUCCESS:\n      return [\n        ...state,\n        {\n          type: ALERT_TYPE.SUCCESS,\n          header: `${action.header}`,\n          message: `${action.message}`,\n          key: generateKey(),\n        },\n      ];\n    case ACTIONS.ACTION_REMOVE_BY_KEY:\n      // eslint-disable-next-line no-case-declarations\n      const stateModed = [...state];\n      // eslint-disable-next-line no-case-declarations\n      const index = stateModed.findIndex((x) => x.key === action.key);\n      if (index === -1) return state;\n      stateModed.splice(index, 1);\n      return stateModed;\n    default:\n      return state;\n  }\n}\n\nexport default AlertReducer;\n","import { ACTIONS } from \"./ConversionHistoryActions\";\n\nfunction ConversionHistoryReducer(state = [], action) {\n  switch (action.type) {\n    case ACTIONS.ACTION_CLEAR:\n      return [];\n    case ACTIONS.ACTION_SET:\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nexport default ConversionHistoryReducer;\n","import { combineReducers } from \"redux\";\nimport AlertReducer from \"./Alert/AlertReducer\";\nimport ConversionHistoryReducer from \"./ConversionHistory/ConversionHistoryReducer\";\n\nconst CombinedReducers = combineReducers({\n  alert: AlertReducer,\n  conversionHistory: ConversionHistoryReducer,\n});\n\nexport default CombinedReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport App from \"./Layout/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport CombinedReducers from \"./Common/Redux/CombinedReducers\";\n\nconst store = createStore(CombinedReducers, {\n  conversionHistory: [],\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <App />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}